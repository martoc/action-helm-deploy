---
name: "Deploys a Helm Chart"
description: |
  This action deploys a Helm chart to a registry.
author: martoc
inputs:
  registry:
    description: 'Registry to push the container to (default: docker.io) valid values: gcp'
    required: false
    default: 'docker.io'
  region:
    description: 'Region to push the container to valid values: google cloud or aws regions'
    required: false
    default: ''
  repository_name:
    description: 'Repository Name'
    required: false
    default: ''
  gcp_project_id:
    description: 'Google Cloud Project ID'
    required: false
    default: ''
  workload_identity_provider:
    description: 'Workload Identity Provider'
    required: false
    default: ''
  service_account:
    description: 'Service Account'
    required: false
    default: ''
  cluster_name:
    description: 'Cluster Name'
    required: true
  chart_name:
    description: 'Chart Name'
    required: true
  chart_version:
    description: 'Chart Version'
    required: true
  chart_value_file:
    description: 'Chart Values File'
    required: true
runs:
  using: "composite"
  steps:
    - name: 'Set up Cloud SDK'
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: 499.0.0
      if: ${{ inputs.registry == 'gcp' }}
    - uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}
      if: ${{ inputs.registry == 'gcp' }}
    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ inputs.cluster_name }}
        location: ${{ inputs.region }}
      if: ${{ inputs.registry == 'gcp' }}
    - name: Login to registry
      shell: sh
      run: |
        gcloud auth print-access-token | helm registry login -u oauth2accesstoken --password-stdin https://${{ inputs.region }}-docker.pkg.dev
      if: ${{ inputs.registry == 'gcp' }}
    - name: Deploy
      shell: sh
      run: |
        helm template \
          oci://${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.repository_name }}/${{ inputs.chart_name }} \
          --version ${{ inputs.chart_version }} \
          --values ${{ inputs.chart_value_file }} | kubectl apply -f -
      if: ${{ inputs.registry == 'gcp' }}
